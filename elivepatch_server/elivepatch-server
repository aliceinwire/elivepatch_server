#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# (c) 2017, Alice Ferrazzi <alice.ferrazzi@gmail.com>
# Distributed under the terms of the GNU General Public License v2 or later


from flask import Flask
from flask_restful import Api
import multiprocessing
import argparse
from elivepatch_server.resources import AgentInfo, dispatcher

def parse_args():
    parser = argparse.ArgumentParser()

    parser.add_argument('-j', '--jobs', type=int,
                        default=multiprocessing.cpu_count())

    return parser.parse_args()

def create_app():
    """
    Create server application
    RESTful api version 1.0
    """

    app = Flask(__name__, static_url_path="")
    api = Api(app)

    cmdline_args = parse_args()

    api.add_resource(AgentInfo.AgentAPI, '/elivepatch/api/',
                     endpoint='root')

    # get agento information
    api.add_resource(AgentInfo.AgentAPI, '/elivepatch/api/v1.0/agent',
                     endpoint='agent')

    # where to retrieve the live patch when ready
    api.add_resource(dispatcher.SendLivePatch,
                     '/elivepatch/api/v1.0/send_livepatch',
                     endpoint='send_livepatch')

    # where to receive the config file
    api.add_resource(dispatcher.GetFiles, '/elivepatch/api/v1.0/get_files',
                     endpoint='config',
                     resource_class_kwargs={'cmdline_args': cmdline_args})
    return app

if __name__ == '__main__':
    app = create_app()
    app.run(debug=True, host='0.0.0.0', threaded=True)
